name: CI/CD

on: [push, pull_request]

env:
  MSYS2_CACHE_KEY: msys2-packages-${{ hashFiles('**/Makefile') }}-v1
  MSYS2_ROOT: C:/tools/msys64

jobs:
  linux-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y libavformat-dev libavcodec-dev libavutil-dev \
            libswscale-dev libswresample-dev libsdl2-dev

      - name: Build app (Linux)
        run: make

  macos-build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Homebrew (macOS)
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zshrc
          echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.bashrc
          eval "$(/opt/homebrew/bin/brew shellenv)"

      - name: Install dependencies (macOS)
        run: |
          brew update
          brew install sdl2 ffmpeg
      
      - name: Build app (macOS)
        run: make
  windows-build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache MSYS2 packages
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.MSYS2_ROOT }}/var/cache/pacman/pkg
            ${{ env.MSYS2_ROOT }}/mingw64
          key: ${{ env.MSYS2_CACHE_KEY }}

      - name: Install dependencies (Windows)
        run: |
          choco install msys2 --params="/NoUpdate" -y
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          refreshenv

          C:\tools\msys64\usr\bin\bash.exe -l -c "
          pacman --noconfirm -Syuu || echo 'MSYS2 update completed (session terminated)' >&2
          "
          exit 0  # Always succeed this step

      - name: Install packages in fresh session
        run: |
          C:\tools\msys64\usr\bin\bash.exe -l -c "
            if [ '${{ steps.cache.outputs.cache-hit }}' != 'true' ]; then
              pacman -S --needed --noconfirm \
              mingw-w64-x86_64-make \
              mingw-w64-x86_64-gcc \
              mingw-w64-x86_64-SDL2 \
              mingw-w64-x86_64-pkg-config \
              mingw-w64-x86_64-ffmpeg
            fi
          "
      - name: Build project
        run: |
          C:\tools\msys64\usr\bin\bash.exe -l -c "
            export MSYSTEM=MINGW64
            source /etc/profile
            [ ! -f /mingw64/bin/make.exe ] && ln -s /mingw64/bin/mingw32-make.exe /mingw64/bin/make.exe

            make -f Makefile
          "
